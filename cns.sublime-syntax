%YAML 1.2
---
# See http://www.sublimetext.com/docs/3/syntax.html
name: CNS
file_extensions:
  - def
  - cns
  - cmd
  - st
scope: source.cns

variables:
  identifier: '[a-zA-Z][a-zA-Z0-9\_\.\-]*'

contexts:
  prototype:
    - include: comments

  main:
    - include: sections
    - include: keyvalue
    - include: trigger

  trigger:
    - include: functions
    - include: operators
    - include: numbers
    - include: strings

  sections:
    - include: numbers
    - match: '^\s*\['
      scope: punctuation.section.group.begin.cns
      push:
        - meta_scope: keyword.context.block.cns
        - meta_content_scope: entity.name.section.cns
        - include: numbers
        - match: '[\]\n]'
          scope: punctuation.section.group.end.cns
          pop: true

  keyvalue:
    - match: ^\s*(.+?)\s*(=)\s*
      captures:
        1: meta.mapping.key.cns string.other.cns
        2: keyword.operator.assignment.cns punctuation.separator.mapping.key-value.cns

  operators:
    - match: '(!|~|-|\*\*|\*|/|%|\+|>|>=|<|<=|=|!=|:=|&|\^|\||&&|\^\^|\|\|)'
      scope: keyword.operator.arithmetic.cns

  functions:
    - match: '(?i)(const|stagevar|stageconst|gethitvar)\s*(\()'
      captures:
        1: variable.function.cns
        2: punctuation.section.group.begin.cns
      push:
        - meta_content_scope: string.unquoted.cns
        - match: \)
          scope: punctuation.section.group.end.cns
          pop: true
    - match: '({{identifier}})\s*(\()'
      captures:
        1: variable.function.cns
        2: punctuation.section.group.begin.cns
      push:
        - include: trigger
        - match: \)
          scope: punctuation.section.group.end.cns
          pop: true
    - match: '({{identifier}})\s+([a-zA-Z])'
      captures:
        1: variable.function.cns
    - match: '{{identifier}}'
      scope: variable.function.cns

  numbers:
    - match: '[A-Z]+([0-9]+)'
      scope: constant.numeric.cns
    - match: '[0-9]+|[0-9]*\.[0-9]+'
      scope: constant.numeric.cns

  strings:
    - match: '"'
      scope: punctuation.definition.string.begin.cns
      push:
        - meta_scope: string.quoted.double.cns
        - match: '"'
          scope: punctuation.definition.string.end.cns
          pop: true
        - match: \n
          scope: invalid.illegal.cns
          pop: true

  comments:
    - match: ';'
      scope: punctuation.definition.comment.cns
      push:
        - meta_scope: comment.line.semi-colon.cns
        - match: $\n?
          pop: true
